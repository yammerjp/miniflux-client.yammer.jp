import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'

export default function Home() {
  const router = useRouter()
  const [loggedIn, setLoggedIn] = useState<boolean | undefined>(undefined)
  const [entries, setEntries] = useState<any[]>([])

  useEffect(() => {
    (async () => {
      console.log('try-login')
      const {logged_in}= await fetch('/api/auth').then(res => res.json())
      if (!logged_in) {
        router.push('/login')
        return
      }
      setLoggedIn(true)
      const res = await fetch('/api/entries').then(res => res.json())
      if (!(res?.entries?.length > 0)) {
        return Promise.reject()
      }
      setEntries(res.entries)
       await Promise.all(res.entries.map(async entry => {
        console.log(`fetching... ${entry.url}`)
        const {image_url} = await fetch('/api/ogimage', { method: "POST", body: JSON.stringify({url: entry.url}),headers: {'Content-Type': 'application/json'}}).then(res => res.json())
        console.log(`fetched!... ${entry.url}`)
        setEntries(entries => entries.map(e => e.id === entry.id ? {...e, imageUrl: image_url}: e))
       }))
    })().catch(() => {
      router.push('/login')
    });
  }, [])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          miniflux client
        </h1>
        {loggedIn === undefined ? (
          <div>
            loading...
          </div>
        ) : (
          <div>
            logged in!
            {entries.map(e => (<div key={e.id}>
              <h2>
                <a href={e.url}>{e.title}</a>
              </h2>
              <div>
                {e.published_at} | {e.feed.site_url.split('/').slice(2).filter(s => s !== '').join('/')} 
              </div>
              <div style={{ width: 160, height: 90, backgroundImage: `url(${e.imageUrl || '/image-empty.png'})`, backgroundSize: 'cover', backgroundPosition: 'center center'}}></div>
            </div>))}
          </div>
        )}
      </main>
    </div>
  )
}
